<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="27">
  <CheatEntries>
    <CheatEntry>
      <ID>0</ID>
      <Description>"Attach to running game"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>

{$lua}
--code from here to `[ENABLE]` will be run for both `[ENABLE]` and `[DISABLE]`



[ENABLE]
--code from here to `[DISABLE]` will be used to enable the cheat


--check to see if Mono is available. We use it to inject, so it's kind of a big deal.
if (LaunchMonoDataCollector()==0) then 
  error("no mono") 
end

--declare variables
instancesOfPlayer = {}


print("")
local KingmakerPlayerClassId = mono_findClass('Kingmaker', 'Player')
print("KingmakerPlayerClassId: " .. string.format('%x', KingmakerPlayerClassId))

local instancesOfPlayer = mono_class_findInstancesOfClassListOnly(nil, KingmakerPlayerClassId)

for index, foundInstance in pairs(instancesOfPlayer) do
	print("foundInstance: " .. string.format('%x', foundInstance))
end


 
 
[DISABLE]
--code from here till the end of the code will be used to disable the cheat
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
