<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="27">
  <CheatEntries>
    <CheatEntry>
      <ID>0</ID>
      <Description>"Attach to running game"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>

{$lua}
--code from here to `[ENABLE]` will be run for both `[ENABLE]` and `[DISABLE]`

--load structure definitions
monoAA_GETMONOSTRUCT("Player")

--constants
local playerParentEntry = "KingMaker.Player (active game)"

--used everywhere
local addressList = getAddressList() 

--function to add a Kingmaker.Player address entry in the main Cheat Engine view
local function AddKingMakerPlayerAddress(address)
	print("found Kingmaker.PlayerInstance: " .. string.format('%x', address))

	--fetch the header
	local parent = addressList.getMemoryRecordByDescription(playerParentEntry)

	--attach a child
	local child = addressList.createMemoryRecord() 
	child.Description = "Found `Kingmaker.Player` Instance" 
	child.Address = address
	child.appendToEntry(parent)

end



[ENABLE]
--code from here to `[DISABLE]` will be used to enable the cheat


--check to see if Mono is available. We use it to inject, so it's kind of a big deal.
if (LaunchMonoDataCollector()==0) then 
  error("no mono") 
end

--declare variables
instancesOfPlayer = {}


print("")
local KingmakerPlayerClassId = mono_findClass('Kingmaker', 'Player')
print("KingmakerPlayerClassId: " .. string.format('%x', KingmakerPlayerClassId))

--note: `mono_class_findInstancesOfClass` brings up the UI and finds a smaller list of instances.
--      `mono_class_findInstancesOfClassListOnly` is programatic, but finds... more instances :-/

--local instancesOfPlayer = mono_class_findInstancesOfClass(nil, KingmakerPlayerClassId)

local instancesOfPlayer = mono_class_findInstancesOfClassListOnly(nil, KingmakerPlayerClassId)

--create a header
local header = addressList.createMemoryRecord() 
header.Description = playerParentEntry
header.isGroupHeader = true 

--loop through results and add
for index, foundInstance in pairs(instancesOfPlayer) do
	--print("foundInstance: " .. string.format('%x', foundInstance))
	AddKingMakerPlayerAddress(foundInstance)
end


 
 
[DISABLE]
--code from here till the end of the code will be used to disable the cheat

--remove the Kingmaker.Player entries
local parent = addressList.getMemoryRecordByDescription(playerParentEntry)
memoryrecord_delete(parent) 
 

</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
